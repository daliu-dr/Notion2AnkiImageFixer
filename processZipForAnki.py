# PROBLEM: if you leave the HTML files from Notion2Anki (and Notion) unaltered, what happens is that the img width styles mess up Anki and cause them to stretch. 
# SOLUTION: Run the .zip file generated by *Notion* into this script, and it'll remove the img width styles, meaning Anki won't stretch it. 

import zipfile 
import os 
import re 
import pandas as pd 
from bs4 import BeautifulSoup 
import codecs
import shutil 

# Check file pre-requisite fulfilled. Just one zip file to process. 
print("Press enter to find SINGLE zip file. Will throw an error if multiple zip files present.") 
input()

chosenFile = []
for files in os.scandir('.'): 
    if files.name.endswith('.zip'):
        chosenFile.append(files)

chosenFilePD = pd.Index(chosenFile)
if chosenFilePD.size > 1: 
    print("Error: make sure there's only one .zip file, then try again.")
    raise NameError('TooManyZipFiles')        

# Unzip the zip file to ./temporaryFolder
chosenFileName = chosenFile[0].name
with zipfile.ZipFile("./" + chosenFileName, 'r') as zippedFile: 
    if not os.path.isdir("./temporaryFolder"):
        os.mkdir("temporaryFolder")
        zippedFile.extractall("temporaryFolder")

# Find the HTML file 
extractedFiles = [f for f in os.listdir("./temporaryFolder") if f.endswith('.html')]
htmlFilename = extractedFiles[0]
htmlPath = "./temporaryFolder/" + htmlFilename

# Read the HTML file contents 
page = codecs.open(htmlPath, 'r')
htmlContents = page.read() # source code is now htmlContents 

# Alter the HTMl file, removing the img width bits with regex 
replacementContents = re.sub(r'\<img style\=\"width\:\d*px"', r"\<img", htmlContents)
# Delete original HTML file 
os.remove(htmlPath)
# Write the new version in its place 
newFile = open(htmlPath, "w")
newFile.write(replacementContents)
newFile.close() 

# Re-zip the new package and create a new file out of it in the same folder 
# create a ZipFile object
zipObj = zipfile.ZipFile("NEW " + chosenFileName, 'w')
# Add multiple files to the zip
zipObj.write(htmlPath)
zipObj.write(htmlPath.replace(".html", "")) # the one scenario this won't work is if html is actually in the file name as the title...! 
# close the Zip File
zipObj.close()

# Clean up by deleting temporary folder 
shutil.rmtree("./temporaryFolder")
